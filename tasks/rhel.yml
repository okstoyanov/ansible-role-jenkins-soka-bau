---
# Install jenkins for RHEL

- name: Download Long Term Jenkins release
  get_url:
    url: "{{ jenkins_repo }}"
    dest: /etc/yum.repos.d/jenkins.repo
  become: true
  register: result
  until: result is successful
  
- name: Importing the key 
  ansible.builtin.rpm_key:
    state: present
    key: "{{ jenkins_key }}"
  become: true

- name: Update the system
  ansible.builtin.yum:
    name: "*"
    state: latest
  become: true

# TODO:
# Parametrize to install multiple dependencies for different hosts
- name: install dependencies fontconfig
  ansible.builtin.yum:
    name: fontconfig
    state: present
  become: true

- name: Install java for jenkins
  ansible.builtin.yum: 
    name: "{{ java_version }}"
    state: present
  become: true

# Set current java version to java-17-openjdk
- name: Correct java version selected
  community.general.alternatives:
    name: java
    path: /usr/lib/jvm/java-17-openjdk-17.0.11.0.9-2.el9.x86_64/bin/java

# TODO:
# Install and configure Nginx to handle Jenkins with SSL.
- include_tasks: nginx.yml

- name: Installing jenkins 
  ansible.builtin.yum:
    name: "{{ jenkins_package }}"
    state: present
  become: true
  register: result
  until: result is successful

- name: daemon-reload to pick up config changes
  ansible.builtin.systemd:
      daemon_reload: yes
  become: true

# Configure Jenkins init / override settings.
- include_tasks: settings.yml

- name: Start jenkins
  ansible.builtin.systemd:
      name: "{{ jenkins_service }}"
      state: started
      enabled: true
  become: true

- name: Populate service facts
  service_facts:

- name: Open Firewall Port
  ansible.posix.firewalld:
    port: 443/tcp
    permanent: yes
    state: enabled
    zone: public
    immediate: yes
  become: true
  when: ansible_facts.services['firewalld.service'].state == 'running'
  notify: "{{ firewalld_service }}"

# Update Jenkins and install configured plugins.
- include_tasks: plugins.yml
